"use strict"
define("git-task-list/app",["exports","ember-load-initializers","git-task-list/resolver","git-task-list/config/environment"],function(e,t,n,s){Object.defineProperty(e,"__esModule",{value:!0})
var i=Ember.Application.extend({modulePrefix:s.default.modulePrefix,podModulePrefix:s.default.podModulePrefix,Resolver:n.default});(0,t.default)(i,s.default.modulePrefix),e.default=i}),define("git-task-list/components/fa-icon",["exports","@fortawesome/ember-fontawesome/components/fa-icon"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("git-task-list/components/fontawesome-node",["exports","@fortawesome/ember-fontawesome/components/fontawesome-node"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("git-task-list/components/markdown-to-html",["exports","ember-cli-showdown/components/markdown-to-html"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("git-task-list/components/settings-modal",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({userSettings:Ember.inject.service(),token_github_com:Ember.computed.oneWay("userSettings.tokens.github_com"),init:function(){this._super.apply(this,arguments)},actions:{hideModal:function(){this.set("isActive",!1),this.userSettings.setSetting("githubTokenModalSeen",!0)},saveSettings:function(){this.userSettings.setToken("github_com",this.get("token_github_com")),this.set("isActive",!1)}},classNames:["modal"],classNameBindings:["isActive"],isActive:!1})}),define("git-task-list/components/task-item",["exports","git-task-list/utils/label-utils"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({init:function(){this._super.apply(this,arguments)},didReceiveAttrs:function(){this.get("task").labels.map(function(e){var n=e
return n.fontColor=(0,t.calculateForegroundColor)(e.color),n})},didInsertElement:function(){this.$().linkify({validate:{url:function(e){return/^(http|ftp)s?:\/\//.test(e)}},formatHref:function(e,t){return"mention"===t?"https://github.com/"+e.substring(1):e}})}})}),define("git-task-list/controllers/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({actions:{showSettingsModal:function(){this.set("showModal",!0)}}})}),define("git-task-list/controllers/tasks",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({organizations:Ember.inject.service(),queryParams:["org"]})}),define("git-task-list/data/organizations",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={coala:{name:"coala association e.V.",trackers:[{type:"github",identifier:"coala",defaultLabels:["difficulty/newcomer"]},{type:"gitlab",identifier:"coala"}]},"52-north-initiative-for-geospatial-open-source-software-gmbh":{name:"52Â° North Initiative for Geospatial Open Source Software GmbH",trackers:[{type:"github",identifier:"52North"}]},discourse:{name:"Discourse",trackers:[{type:"github",identifier:"discourse"}]},wikimedia:{name:"Wikimedia",trackers:[{type:"github",identifier:"wikimedia"}]},opensuse:{name:"Opensuse",trackers:[{type:"github",identifier:"opensuse"}]},elm:{name:"Elm",trackers:[{type:"github",identifier:"elm-lang"}]},cadasta:{name:"Cadasta",trackers:[{type:"github",identifier:"cadasta"}]},enketo:{name:"Enketo",trackers:[{type:"github",identifier:"enketo"}]},kobotoolbox:{name:"Kobotoolbox",trackers:[{type:"github",identifier:"kobotoolbox"}]},movingblocks:{name:"Movingblocks",trackers:[{type:"github",identifier:"movingblocks"}]},nexB:{name:"Nexb",trackers:[{type:"github",identifier:"nexB"}]}}}),define("git-task-list/graphql/github",["exports","git-task-list/utils/commons"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.tasksQuery=void 0,e.queryBuilder=function(e){var t=e.orgs,s=e.labels,i=["sort:updated-desc","state:open","no:assignee","is:issue"]
t&&(i=i.concat(n("user",t)))
s&&(i=i.concat(n("label",s)))
return i.join(" ")}
e.tasksQuery="query($searchQuery: String!){\n  search(query: $searchQuery, type: ISSUE, first: 100 ) {\n    nodes {\n      _type: __typename\n      ... on Issue {\n        id\n        author {\n          ...authorFragment\n        }\n        bodyText\n        comments {\n          totalCount\n        }\n        labels {\n          ...labelsFragment\n        }\n        repository {\n          ...repositoryFragment\n        }\n        title\n        updatedAt\n        url\n      }\n      ... on PullRequest {\n        id\n        author {\n          ...authorFragment\n        }\n        bodyText\n        comments {\n          totalCount\n        }\n        labels {\n          ...labelsFragment\n        }\n        repository {\n          ...repositoryFragment\n        }\n        title\n        updatedAt\n        url\n      }\n    }\n  }\n}\nfragment repositoryFragment on Repository {\n  nameWithOwner\n  owner {\n    avatarUrl\n  }\n  url\n}\nfragment labelsFragment on LabelConnection {\n  totalCount\n  nodes {\n    color\n    description\n    id\n    name\n  }\n}\nfragment authorFragment on Actor {\n  url\n  login\n  avatarUrl\n}"
function n(e,n){return(0,t.isIterable)(n)?n.reduce(function(t,n){return[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t]
return n}return Array.from(e)}(t),[e+":"+n])},[]):n?[e+":"+n]:[]}}),define("git-task-list/helpers/app-version",["exports","git-task-list/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,n){function s(e){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=t.default.APP.version,a=s.versionOnly||s.hideSha,r=s.shaOnly||s.hideVersion,l=null
return a&&(s.showExtended&&(l=i.match(n.versionExtendedRegExp)),l||(l=i.match(n.versionRegExp))),r&&(l=i.match(n.shaRegExp)),l?l[0]:i}Object.defineProperty(e,"__esModule",{value:!0}),e.appVersion=s,e.default=Ember.Helper.helper(s)}),define("git-task-list/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("git-task-list/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("git-task-list/helpers/time-ago",["exports","moment"],function(e,t){function n(e){return(0,t.default)(e[0]).fromNow()}Object.defineProperty(e,"__esModule",{value:!0}),e.timeAgo=n,e.default=Ember.Helper.helper(n)}),define("git-task-list/helpers/truncate-text",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],s=!0,i=!1,a=void 0
try{for(var r,l=e[Symbol.iterator]();!(s=(r=l.next()).done)&&(n.push(r.value),!t||n.length!==t);s=!0);}catch(e){i=!0,a=e}finally{try{!s&&l.return&&l.return()}finally{if(i)throw a}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Helper.helper(function(e,n){var s=t(e,1)[0],i=n.limit,a=""
return s&&s.length>0&&(a=s.substr(0,i),s.length>i&&(a+="...")),a})}),define("git-task-list/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","git-task-list/config/environment"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var s=void 0,i=void 0
n.default.APP&&(s=n.default.APP.name,i=n.default.APP.version),e.default={name:"App Version",initialize:(0,t.default)(s,i)}}),define("git-task-list/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("git-task-list/initializers/ember-data",["exports","ember-data/setup-container","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("git-task-list/initializers/export-application-global",["exports","git-task-list/config/environment"],function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var s,i=t.default.exportApplicationGlobal
s="string"==typeof i?i:Ember.String.classify(t.default.modulePrefix),n[s]||(n[s]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[s]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("git-task-list/initializers/showdown",["exports"],function(e){function t(){showdown.setFlavor("github"),showdown.extension("issueWrap",function(){return[{type:"html",regex:"<pre>",replace:'<pre style="white-space: pre-wrap">'},{type:"html",regex:"<p>",replace:'<p style="overflow-wrap: break-word;">'}]})}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=t,e.default={name:"showdown",initialize:t}}),define("git-task-list/instance-initializers/ember-data",["exports","ember-data/initialize-store-service"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("git-task-list/models/github-task",["exports","git-task-list/models/task"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({})}),define("git-task-list/models/task",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.Model.extend({title:t.default.attr("string"),author:t.default.attr(),bodyText:t.default.attr("string"),labels:t.default.attr(),organization:t.default.attr("string"),url:t.default.attr("string"),updatedAt:t.default.attr("date"),repository:t.default.attr(),commentCount:t.default.attr("number"),isPullRequest:t.default.attr("boolean")})}),define("git-task-list/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("git-task-list/router",["exports","git-task-list/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=Ember.Router.extend({location:t.default.locationType,rootURL:t.default.rootURL})
n.map(function(){return this.route("tasks",function(){this.route("github")})}),e.default=n}),define("git-task-list/routes/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({userSettings:Ember.inject.service(),github:Ember.inject.service(),organizations:Ember.inject.service(),model:function(){return this.get("organizations").get("list")},setupController:function(e,t){this.userSettings.get("githubTokenModalSeen")||e.set("showModal",!this.userSettings.tokens.get("github_com")),this._super(e,t)}})}),define("git-task-list/routes/tasks",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({github:Ember.inject.service(),organizations:Ember.inject.service(),store:Ember.inject.service(),queryParams:{org:{refreshModel:!0},labels:{refreshModel:!0}},beforeModel:function(e){var t=e.queryParams.org
this.set("currentOrg",this.organizations.fetch(t))},setupController:function(e){e.set("currentOrg",this.get("currentOrg"))}})}),define("git-task-list/routes/tasks/github",["exports","git-task-list/utils/task-utils"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({github:Ember.inject.service(),organizations:Ember.inject.service(),store:Ember.inject.service(),currentOrg:null,currentOrgSlug:null,labels:null,beforeModel:function(e){var n=e.queryParams.org
this.set("currentOrgSlug",n),this.set("currentOrg",this.get("organizations").fetch(n))
var s=(0,t.getTrackerDefaultLabels)(this.get("currentOrg"),"github")
this.set("labels",e.queryParams.labels||s)},model:function(){var e=this,n=this.get("store"),s=this.get("github"),i=(0,t.getTrackerIdentifiers)(this.get("currentOrg"),"github"),a=s.tasks({orgs:i,labels:this.get("labels")})
a.then(function(t){return t.forEach(function(t){var s=Object.assign({organization:e.get("currentOrgSlug")},t)
n.pushPayload("github-task",s)}),t})
var r=function(t){return t.organization===e.get("currentOrgSlug")}
return a.then(function(){return n.peekAll("github-task").filter(r)})},setupController:function(e,t){e.set("tasks",t),e.set("isGithubpage",!0)}})}),define("git-task-list/routes/tasks/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({beforeModel:function(e){e.queryParams.org?this.transitionTo("tasks.github"):this.transitionTo("/")}})}),define("git-task-list/serializers/github-task",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.JSONSerializer.extend({pushPayload:function(e,t){var n=Object.assign({},t)
return n.commentCount=t.comments.totalCount,n.isPullRequest="PullRequest"===t._type,e.push(this.normalize(e.modelFor("github-task"),n)),n}})})
define("git-task-list/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("git-task-list/services/github",["exports","graphql-request","git-task-list/graphql/github"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend({userSettings:Ember.inject.service(),githubUrl:"https://api.github.com/graphql",init:function(){this._super.apply(this,arguments),this.client=new t.GraphQLClient(this.get("githubUrl"),{headers:{Authorization:"bearer "+this.userSettings.tokens.get("github_com")}})},tasks:function(e){var t=this.client.request(n.tasksQuery,{searchQuery:(0,n.queryBuilder)(e)})
return t.catch(function(e){throw e.payload=Object.assign(e.payload||{},{service:"github"}),e}),t.then(function(e){return e.search.nodes.map(function(e){var t=Object.assign({type:"github-task"},e)
return t.labels=e.labels.nodes,t})})}})}),define("git-task-list/services/organizations",["exports","git-task-list/data/organizations"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend({init:function(){this._super.apply(this,arguments),this.organizations=Ember.Object.create(t.default)},list:Ember.computed("organizations",function(){return this.organizations}),fetch:function(e){return this.organizations.get(e)}})}),define("git-task-list/services/tasks",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend({})}),define("git-task-list/services/user-settings",["exports","git-task-list/utils/storage"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=["githubTokenModalSeen"],s=Ember.Service.extend({init:function(){this._super.apply(this,arguments),this.tokens=Ember.Object.create({github_com:null}),this.reload()},reload:function(){this.reloadSettings(),this.reloadToken()},reloadSettings:function(){var e=this,s=(0,t.getObject)("user_settings")||{}
n.forEach(function(t){return e.set(t,s[t])})},reloadToken:function(){var e=this,n=(0,t.getObject)("user_tokens")||{}
Object.keys(n).forEach(function(t){return e.tokens.set(t,n[t])})},setSetting:function(e,t){return this.set(e,t),this.persistSettings(),e},setToken:function(e,t){return this.tokens.set(e,t),this.persistTokens(),t},persistSettings:function(){var e=this,s={}
n.forEach(function(t){s[t]=e.get(t)}),(0,t.setObject)("user_settings",s)},persistTokens:function(){(0,t.setObject)("user_tokens",this.tokens)}})
e.default=s}),define("git-task-list/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Q7euR9jj",block:'{"symbols":[],"statements":[[4,"settings-modal",null,[["isActive"],[[22,["showModal"]]]],{"statements":[],"parameters":[]},null],[0,"\\n"],[6,"nav"],[10,"class","main-navbar navbar is-transparent"],[8],[0,"\\n  "],[6,"div"],[10,"class","navbar-brand"],[8],[0,"\\n"],[4,"link-to",["application"],[["class"],["navbar-item"]],{"statements":[[0,"      Git Task List\\n"]],"parameters":[]},null],[0,"    "],[6,"a"],[10,"role","button"],[10,"class","navbar-burger"],[10,"aria-label","menu"],[10,"aria-expanded","false"],[8],[0,"\\n      "],[6,"a"],[10,"href","#"],[11,"onclick",[26,"action",[[21,0,[]],"showSettingsModal"],null],null],[8],[1,[26,"fa-icon",["cog"],[["size"],["2x"]]],false],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"div"],[10,"class","navbar-menu"],[8],[0,"\\n    "],[6,"div"],[10,"class","navbar-end"],[8],[0,"\\n      "],[6,"div"],[10,"class","navbar-item"],[8],[0,"\\n        "],[6,"a"],[10,"href","#"],[11,"onclick",[26,"action",[[21,0,[]],"showSettingsModal"],null],null],[8],[1,[26,"fa-icon",["cog"],[["size"],["2x"]]],false],[9],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"],[6,"section"],[10,"class","section"],[8],[0,"\\n  "],[6,"div"],[10,"class","container"],[8],[0,"\\n    "],[1,[20,"outlet"],false],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/application.hbs"}})}),define("git-task-list/templates/components/settings-modal",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"QYDQC8VW",block:'{"symbols":[],"statements":[[6,"div"],[10,"class","modal-background"],[11,"onclick",[26,"action",[[21,0,[]],"hideModal"],null],null],[8],[9],[0,"\\n"],[6,"div"],[10,"class","modal-content"],[8],[0,"\\n  "],[6,"div"],[10,"class","modal-card"],[8],[0,"\\n    "],[6,"header"],[10,"class","modal-card-head"],[8],[0,"\\n      "],[6,"p"],[10,"class","modal-card-title"],[8],[0,"User Settings"],[9],[0,"\\n      "],[6,"button"],[10,"class","delete"],[10,"aria-label","close"],[11,"onclick",[26,"action",[[21,0,[]],"hideModal"],null],null],[8],[9],[0,"\\n    "],[9],[0,"\\n    "],[6,"section"],[10,"class","modal-card-body"],[8],[0,"\\n      "],[6,"div"],[10,"class","field"],[8],[0,"\\n        "],[6,"label"],[10,"class","label"],[8],[0,"GitHub Token"],[9],[0,"\\n        "],[6,"div"],[10,"class","control"],[8],[0,"\\n          "],[1,[26,"input",null,[["class","value"],["input",[22,["token_github_com"]]]]],false],[0,"\\n        "],[9],[0,"\\n        "],[6,"p"],[10,"class","help is-danger"],[8],[0,"In order to fetch results from GitHub, you must specify GitHub token. With ANY scope you like. No exact scope is required."],[9],[0,"\\n        "],[6,"p"],[10,"class","help"],[8],[0,"Get GitHub user token from "],[6,"a"],[10,"href","https://github.com/settings/tokens"],[10,"title","https://github.com/settings/tokens"],[10,"target","_blank"],[8],[0,"https://github.com/settings/tokens"],[9],[9],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n    "],[6,"footer"],[10,"class","modal-card-foot"],[8],[0,"\\n      "],[6,"button"],[10,"class","button is-success"],[11,"onclick",[26,"action",[[21,0,[]],"saveSettings"],null],null],[8],[0,"Save"],[9],[0,"\\n      "],[6,"button"],[10,"class","button"],[11,"onclick",[26,"action",[[21,0,[]],"hideModal"],null],null],[8],[0,"Close"],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"],[6,"button"],[10,"class","modal-close is-large"],[10,"aria-label","close"],[11,"onclick",[26,"action",[[21,0,[]],"hideModal"],null],null],[8],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/components/settings-modal.hbs"}})}),define("git-task-list/templates/components/task-item",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"JFGysubK",block:'{"symbols":["label"],"statements":[[6,"div"],[10,"class","card"],[8],[0,"\\n  "],[6,"header"],[10,"class","card-header"],[8],[0,"\\n    "],[6,"p"],[10,"class","card-header-title"],[8],[0,"\\n      "],[1,[22,["task","title"]],false],[0,"\\n    "],[9],[0,"\\n    "],[6,"a"],[11,"href",[27,[[22,["task","url"]]]]],[10,"target","_blank"],[10,"class","card-header-icon"],[10,"aria-label","more options"],[8],[0,"\\n      "],[6,"span"],[10,"class","icon"],[8],[0,"\\n"],[4,"if",[[22,["task","isPullRequest"]]],null,{"statements":[[0,"          "],[1,[26,"fa-icon",["code-branch"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"          "],[1,[26,"fa-icon",["bug"],null],false],[0,"\\n"]],"parameters":[]}],[0,"      "],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"div"],[10,"class","card-content"],[8],[0,"\\n    "],[6,"div"],[10,"class","content"],[8],[0,"\\n      "],[1,[26,"truncate-text",[[22,["task","bodyText"]]],[["limit"],[350]]],false],[0,"\\n    "],[9],[0,"\\n    "],[6,"time"],[11,"title",[27,[[22,["task","updatedAt"]]]]],[8],[1,[26,"time-ago",[[22,["task","updatedAt"]]],null],false],[9],[0,"\\n    "],[6,"div"],[10,"class","tags"],[8],[0,"\\n"],[4,"each",[[22,["task","labels"]]],null,{"statements":[[0,"        "],[6,"span"],[10,"class","tag"],[11,"style",[27,["color: ",[21,1,["fontColor"]],"; background-color: #",[21,1,["color"]]]]],[8],[0,"\\n          "],[1,[21,1,["name"]],false],[0,"\\n        "],[9],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"footer"],[10,"class","card-footer"],[8],[0,"\\n    "],[6,"a"],[11,"href",[27,[[22,["task","repository","url"]]]]],[10,"class","card-footer-item"],[10,"target","_blank"],[8],[0,"\\n      "],[1,[22,["task","repository","nameWithOwner"]],false],[0,"\\n    "],[9],[0,"\\n    "],[6,"a"],[11,"href",[27,[[22,["task","author","url"]]]]],[10,"class","card-footer-item"],[10,"target","_blank"],[8],[0,"\\n      "],[6,"figure"],[10,"class","org-icon"],[8],[0,"\\n        "],[6,"img"],[11,"src",[27,[[22,["task","author","avatarUrl"]]]]],[10,"alt",""],[8],[9],[0,"\\n      "],[9],[0,"\\n      Â \\n      "],[1,[22,["task","author","login"]],false],[0,"\\n    "],[9],[0,"\\n    "],[6,"a"],[11,"href",[27,[[22,["task","url"]]]]],[10,"class","card-footer-item"],[10,"target","_blank"],[8],[0,"Open"],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/components/task-item.hbs"}})}),define("git-task-list/templates/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Fnq3/wdc",block:'{"symbols":["slug","organization"],"statements":[[6,"div"],[10,"class","columns is-multiline"],[8],[0,"\\n"],[4,"each",[[26,"-each-in",[[22,["model"]]],null]],null,{"statements":[[0,"    "],[6,"div"],[10,"class","column is-one-third"],[8],[0,"\\n"],[4,"link-to",["tasks",[26,"query-params",null,[["org"],[[21,1,[]]]]]],[["tagName","class"],["div","card organization-card"]],{"statements":[[0,"        "],[6,"div"],[10,"class","card-content"],[8],[0,"\\n          "],[6,"div"],[10,"class","media"],[8],[0,"\\n            "],[6,"div"],[10,"class","media-content"],[8],[0,"\\n              "],[6,"p"],[10,"class","title is-6"],[8],[1,[26,"truncate-text",[[21,2,["name"]]],[["limit"],["45"]]],false],[9],[0,"\\n            "],[9],[0,"\\n          "],[9],[0,"\\n        "],[9],[0,"\\n"]],"parameters":[]},null],[0,"    "],[9],[0,"\\n"]],"parameters":[1,2]},null],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/index.hbs"}})}),define("git-task-list/templates/loading",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"+p87FayF",block:'{"symbols":[],"statements":[[6,"div"],[10,"class","is-loading"],[8],[0,"\\n  Loading...\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/loading.hbs"}})}),define("git-task-list/templates/tasks",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"kqdGHnKw",block:'{"symbols":["slug","org"],"statements":[[6,"div"],[10,"class","columns"],[8],[0,"\\n  "],[6,"section"],[10,"class","container column is-one-quarter"],[8],[0,"\\n    "],[6,"aside"],[10,"class","menu"],[8],[0,"\\n"],[4,"if",[[22,["currentOrg"]]],null,{"statements":[[0,"        "],[6,"p"],[10,"class","menu-label"],[8],[0,"\\n          Current Organization\\n        "],[9],[0,"\\n        "],[6,"ul"],[10,"class","menu-list"],[8],[0,"\\n          "],[6,"li"],[8],[6,"a"],[8],[1,[22,["currentOrg","name"]],false],[9],[9],[0,"\\n        "],[9],[0,"\\n"]],"parameters":[]},null],[0,"      "],[6,"p"],[10,"class","menu-label"],[8],[0,"\\n        Organizations\\n      "],[9],[0,"\\n      "],[6,"ul"],[10,"class","menu-list"],[8],[0,"\\n"],[4,"each",[[26,"-each-in",[[22,["organizations","list"]]],null]],null,{"statements":[[0,"          "],[6,"li"],[8],[0,"\\n"],[4,"link-to",[[26,"query-params",null,[["org","labels"],[[21,1,[]],null]]]],null,{"statements":[[0,"              "],[1,[21,2,["name"]],false],[0,"\\n"]],"parameters":[]},null],[0,"          "],[9],[0,"\\n"]],"parameters":[1,2]},null],[0,"      "],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"div"],[10,"class","column is-three-quarters"],[8],[0,"\\n    "],[6,"nav"],[10,"class","panel"],[8],[0,"\\n      "],[6,"p"],[10,"class","panel-tabs is-size-4"],[8],[0,"\\n        "],[6,"a"],[11,"class",[27,["is-active ",[26,"if",[[22,["isGithubpage"]],"disabled"],null]]]],[8],[0,"GitHub"],[9],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n    "],[1,[20,"outlet"],false],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/tasks.hbs"}})}),define("git-task-list/templates/tasks/github",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Lp5JxplM",block:'{"symbols":["task"],"statements":[[4,"each",[[22,["tasks"]]],null,{"statements":[[0,"  "],[1,[26,"task-item",null,[["task"],[[21,1,[]]]]],false],[0,"\\n"],[6,"hr"],[8],[9],[0,"\\n"]],"parameters":[1]},null]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/tasks/github.hbs"}})}),define("git-task-list/templates/tasks/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Y9WU21hQ",block:'{"symbols":[],"statements":[],"hasEval":false}',meta:{moduleName:"git-task-list/templates/tasks/index.hbs"}})}),define("git-task-list/templates/tasks/loading",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"8bafb+3T",block:'{"symbols":[],"statements":[[6,"div"],[10,"class","is-loading"],[8],[0,"\\n  Loading...\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"git-task-list/templates/tasks/loading.hbs"}})}),define("git-task-list/utils/commons",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.isIterable=function(e){if(null==e||"string"==typeof e)return!1
return"function"==typeof e[Symbol.iterator]}}),define("git-task-list/utils/label-utils",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.calculateForegroundColor=function(e){if(!e)return""
return parseInt(e.replace("#",""),16)>8388607.5?"#000":"#fff"}}),define("git-task-list/utils/storage",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.setObject=function(e,t){localStorage.setItem(e,JSON.stringify(t))},e.getObject=function(e){var t=localStorage.getItem(e)
try{return JSON.parse(t)}catch(e){return{}}}}),define("git-task-list/utils/task-utils",["exports"],function(e){function t(e,t,n){return e&&e.trackers?e.trackers.filter(function(e){return e.type===t}).map(function(e){return e[n]}).compact():[]}Object.defineProperty(e,"__esModule",{value:!0}),e.getTrackerIdentifiers=function(e,n){return t(e,n,"identifier")},e.getTrackerDefaultLabels=function(e,n){return t(e,n,"defaultLabels")}}),define("git-task-list/config/environment",[],function(){try{var e="git-task-list/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),n={default:JSON.parse(unescape(t))}
return Object.defineProperty(n,"__esModule",{value:!0}),n}catch(t){throw new Error('Could not read config from meta tag with name "'+e+'".')}}),runningTests||require("git-task-list/app").default.create({name:"git-task-list",version:"0.0.0+f4f47c04"})
